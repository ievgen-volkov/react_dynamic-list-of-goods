{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","getAll","fetch","then","response","ok","Error","status","statusText","json","App","useState","setGoods","hasLoadingError","setHasLoadingError","className","type","onClick","goodList","catch","sort","prevGood","nextGood","localeCompare","sortedGoods","filter","ReactDOM","render","document","getElementById"],"mappings":"8NAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAOF,EAAKE,OAHvB,SAKGF,EAAKG,MAJDH,EAAKI,U,OCNX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UAIf,ICVMC,EAAgB,WAC3B,MAA0BC,mBAAwB,MAAlD,mBAAOjB,EAAP,KAAckB,EAAd,KACA,EAA8CD,oBAAS,GAAvD,mBAAOE,EAAP,KAAwBC,EAAxB,KAEA,OACE,sBAAKC,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,WACPhB,IACGE,MAAK,SAAAe,GAAQ,OAAIN,EAASM,MAC1BC,OAAM,kBAAML,GAAmB,OANtC,4BAYA,wBACEE,KAAK,SACL,UAAQ,oBACRC,QAAS,WDZRhB,IACJE,MAAK,SAAAT,GACJ,OAAO,YAAIA,GAAO0B,MAAK,SAACC,EAAUC,GAChC,OAAOD,EAAStB,KAAKwB,cAAcD,EAASvB,YAG/CI,MAAK,SAAAqB,GACJ,OAAOA,EAAYC,QAAO,SAAC7B,GAAD,OAAUA,EAAKI,IAAM,QCOxCG,MAAK,SAAAe,GAAQ,OAAIN,EAASM,MAC1BC,OAAM,kBAAML,GAAmB,OANtC,gCAYA,wBACEE,KAAK,SACL,UAAQ,aACRC,QAAS,WDZRhB,IACJE,MAAK,SAAAT,GACJ,OAAOA,EAAM+B,QAAO,SAAA7B,GAAI,MAAmB,QAAfA,EAAKE,YCY1BK,MAAK,SAAAe,GAAQ,OAAIN,EAASM,MAC1BC,OAAM,kBAAML,GAAmB,OANtC,4BAYED,EAGE,qBAAKE,UAAU,gBAAf,0DAFCrB,GAAS,cAAC,EAAD,CAAWA,MAAOA,QChDtCgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.53cf52a1.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => {\n      return [...goods].sort((prevGood, nextGood): number => {\n        return prevGood.name.localeCompare(nextGood.name);\n      });\n    })\n    .then(sortedGoods => {\n      return sortedGoods.filter((good) => good.id <= 5);\n    });\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => {\n      return goods.filter(good => good.color === 'red');\n    });\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[] | null>(null);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => {\n          getAll()\n            .then(goodList => setGoods(goodList))\n            .catch(() => setHasLoadingError(true));\n        }}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => {\n          get5First()\n            .then(goodList => setGoods(goodList))\n            .catch(() => setHasLoadingError(true));\n        }}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => {\n          getRedGoods()\n            .then(goodList => setGoods(goodList))\n            .catch(() => setHasLoadingError(true));\n        }}\n      >\n        Load red goods\n      </button>\n\n      {!hasLoadingError\n        ? (goods && <GoodsList goods={goods} />)\n        : (\n          <div className=\"message-error\">\n            Something went wrong, please try again later\n          </div>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}